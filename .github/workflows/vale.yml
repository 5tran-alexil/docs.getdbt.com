name: Vale Linting

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          separator: ' '
          files: |
            **/*.md
            **/*.txt
            **/*.rst

      - name: Install Vale
        env:
          VALE_VERSION: v2.27.0  # Use a stable version
        run: |
          curl -fsSL https://install.goreleaser.com/github.com/errata-ai/vale.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          vale sync

      - name: Run Vale
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        continue-on-error: true  # Prevent the job from failing if Vale exits with an error
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
          files="${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
          # Ensure files exist and are accessible
          existing_files=$(echo "$files" | xargs ls 2>/dev/null || true)
          if [ -n "$existing_files" ]; then
            echo "Running Vale on the following files:"
            echo "$existing_files"
            # Run Vale and save output to a file
            vale --output=JSON $existing_files > vale_output.json
          else
            echo "No files to lint."
          fi

      - name: Annotate with Reviewdog
        if: ${{ steps.changed-files.outputs.any_changed == 'true' && always() }}
        uses: reviewdog/action-reviewdog@v1
        with:
          name: Vale
          reporter: github-pr-review
          filter_mode: diff_context
          fail_on_error: false
          level: warning
          token: ${{ secrets.GITHUB_TOKEN }}
          tool_name: vale
          format: vale
          input: vale_output.json
