name: Vale linting

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'website/docs/**/*'
      - 'website/blog/**/*'
      - 'website/**/*'

jobs:
  vale:
    name: Vale linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: List repository contents
        run: |
          pwd
          ls -R

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Vale
        run: pip install vale==2.27.0  # Install Vale

      - name: Install Reviewdog
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin/

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            website/**/*.md
          separator: ' '

      - name: Debugging - Print changed files
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Confirm files exist
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          echo "Checking if files exist..."
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [ -f "$file" ]; then
              echo "Found: $file"
            else
              echo "File not found: $file"
              exit 1
            fi
          done

      - name: Run Vale and capture output
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        id: run-vale
        run: |
          # Run Vale and output results in JSON format
          vale --output=JSON ${{ steps.changed-files.outputs.all_changed_files }} > vale_output.json

      - name: Check for Vale issues
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        id: check_vale_issues
        run: |
          # Check if any warnings are present in the output
          if grep -q '"Severity":"warning"' vale_output.json; then
            echo "issues_found=true" >> $GITHUB_OUTPUT
          else
            echo "issues_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Reviewdog
        if: ${{ steps.check_vale_issues.outputs.issues_found == 'true' }}
        run: |
          # Feed the Vale output to Reviewdog to create annotations
          cat vale_output.json | reviewdog -f=rdjson -name=vale \
            -reporter=github-pr-check -fail-on-error=false \
            -filter-mode=added -level=warning
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post summary comment
        if: ${{ steps.check_vale_issues.outputs.issues_found == 'true' }}
        run: |
          COMMENT="❗️Oh no, some Vale linting issues were found! Please check the **Files changed** tab for detailed results and make the necessary updates."
          COMMENT+=$'\n\n'
          COMMENT+="➡️ [View detailed report](${{ github.event.pull_request.html_url }}/files)"
          gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
